
function getChartColorsArray(chartId) {
    var colors = $(chartId).attr('data-colors');
    var colors = JSON.parse(colors);
    return colors.map(function(value){
        var newValue = value.replace(' ', '');
        if(newValue.indexOf('--') != -1) {
            var color = getComputedStyle(document.documentElement).getPropertyValue(newValue);
            if(color) return color;
        } else {
            return newValue;
        }
    })
}
var radialchartColors = getChartColorsArray("#invested-overview");
var options = {
    chart: {
        height: 270,
        type: 'radialBar',
        offsetY: -10
    },
    plotOptions: {
        radialBar: {
            startAngle: -90,
            endAngle: 90,
            dataLabels: {
                name: {
                    show: false
                },
                value: {
                    offsetY: 10,
                    fontSize: '18px',
                    color: undefined,
                    formatter: function (val) {
                        return val + "%";
                    }
                }
            }
        }
    },
    colors: [radialchartColors[0]],
    fill: {
        type: 'gradient',
        gradient: {
            shade: 'dark',
            type: 'horizontal',
            gradientToColors: [radialchartColors[1]],
            shadeIntensity: 0.15,
            inverseColors: false,
            opacityFrom: 1,
            opacityTo: 1,
            stops: [20, 60]
        },
    },
    stroke: {
        dashArray: 0,
    },
    legend: {
        show: false
    },
    series: [80],
    labels: ['Series A'],
}

var chart = new ApexCharts(
    document.querySelector("#invested-overview"),
    options
);

chart.render();

// gauge chart
var gaugeColors = getChartColorsArray("#gauge-chart");
var dom = document.getElementById("gauge-chart");
var myChart = echarts.init(dom);
var app = {};
option = null;
option = {
    
    
    tooltip : {
        formatter: "{a} <br/>{b} : {c}%"
    },
    /*toolbox: {
        feature: {
            restore: {title: "Refresh"},
            saveAsImage: {title: "Download Image"}
        }
    },*//*
    series: [
        {
            name: '',
            type: 'gauge',
            //endAngle: 0,
            min: 0,
            max: 100,
            splitNumber: 20,
            detail: {formatter:'{value}%'},
            progress: {
                show: true,
                width: 18
              },
            axisLine: {
                lineStyle: {
                  width: 0,
                  distance: -10,
                  color: [
                    [1, 'rgba(246, 251, 253, 0.1)'],
                    /*[0.7, '#37a2da'],
                    [1, '#fd666d']*/
                  ]
                }
              },
              pointer: {
                itemStyle: {
                    color: 'rgba(196, 196, 196, 1) '
                  }
              },
              axisLabel: {
                distance: -15,
                color: 'rgba(255, 255, 255, 0.6)',
                fontSize: 8
              },
              axisTick: {
                distance: -30, 
                
                lineStyle: {
                  color: 'rgba(255, 255, 255, 0.2)',
                  width: 3,
                  
                }
              },

              splitLine: {
                distance: -30,
                length: 30,
                lineStyle: {
                  color: 'transparent',
                  width: 12
                }
              },
              detail: {
                valueAnimation: true,
                fontSize: 25,
                offsetCenter: [0, '70%'],
                color: 'rgba(250, 250, 250, 1)',
                formatter: '{value}%',
              },
              
             
              
           // steps: [{'range': [0, 250], 'color': 'cyan'},{'range': [250, 400], 'color': 'royalblue'}],
            
            data: [{value: 10, name: ''}]
        }
    ]
option && myChart.setOption(option);

setInterval(function () {
    option.series[0].data[0].value = (Math.random() * 100).toFixed(2) - 0;

    //let gaugeData =50;
    //gaugeData[1].value = +(Math.random() * 100).toFixed(2);
    //gaugeData[2].value = +(Math.random() * 100).toFixed(2);
    
    myChart.setOption(option, true);
},2000);

if (option && typeof option === "object") {
    myChart.setOption(option, true);
}

